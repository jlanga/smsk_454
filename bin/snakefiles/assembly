rule assembly_newbler:
    """
    Assemble with newbler
    """
    input:
        sff = expand(
            qc_dir + "{sample}.from_sff.trimmomatic.fq",
            sample = SAMPLES_SFF
        ),
        fastq = expand(
            qc_dir + "{sample}.from_fastq.trimmomatic.fq",
            sample = SAMPLES_FASTQ
        ),
        adaptors = raw_dir + "adaptors.fa"
    output:
        fna = protected(assembly_dir + "454Isotigs.fna"),
        faa = protected(assembly_dir + "454Isotigs.faa")
    params:
        out_dir = assembly_dir,
        minimum_sequence_length = config["software_params"]["gsAssembler"]["minimum_sequence_length"],
        minimum_overlap_identity = config["software_params"]["gsAssembler"]["minimum_overlap_identity"],
        minimum_overlap_length = config["software_params"]["gsAssembler"]["minimum_overlap_length"],
        additional_params = config["software_params"]["gsAssembler"]["additional_params"]
    threads:
        24
    log:
        assembly_doc + "newbler.log"
    benchmark:
        assembly_doc + "newbler.json"
    shell:
        "./src/454/bin/runAssembly "
            "-cdna "
            "-cpu {threads} "
            "-minlen {params.minimum_sequence_length} "
            "-mi {params.minimum_overlap_identity} "
            "-ml {params.minimum_overlap_length} "
            "-o {params.out_dir} "
            "-vs {input.adaptors} "
            "-vt {input.adaptors} "
            "{params.additional_params} "
            "{input.sff} "
            "{input.fastq} "
        "2> {log} 1>&2"
